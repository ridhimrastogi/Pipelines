---
- name: Set timezone to America/New_York
  timezone:
    name: America/New_York
  become: yes

- name: add vagrant user to sudoers file.
  lineinfile:
    dest: /etc/sudoers
    state: present
    insertbefore: "# See sudoers"
    line: "vagrant ALL=(ALL) NOPASSWD: ALL"
  become: yes

- name: populate environment variables.
  lineinfile:
    dest: "/etc/environment"
    state: present
    regexp: "^{{ item.key }}="
    line: "{{ item.key }}={{ item.value}}"
  with_items: "{{ os_environment }}"
  become: yes

- name: Update and upgrade apt packages.
  register: result
  until: result.failed == false
  delay: 10
  retries: 15
  become: yes
  apt:
    # upgrade: yes
    update_cache: yes

# - name: Update and upgrade apt packages.
#   become: yes
#   apt:
#     # upgrade: yes
#     update_cache: yes
#   register: result  

# - debug: 
#     msg: "{{result}}"

- name: add nodejs key.
  apt_key:
    url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
    state: present
  become: yes

- name: update NodeJS Source List.
  apt_repository:
    repo: deb https://deb.nodesource.com/node_12.x bionic main
    update_cache: no
    state: present
  become: yes

# ****************this is a workaround since mysql PyMySQL requires mysql_native_password ************************************
# - name: Specify MySQL root password before installing
#   become: true
#   debconf:
#     name: mysql-server
#     question: mysql-server/root_password
#     value: "root"
#     vtype: password

# - name: Confirm MySQL root password before installing
#   become: true
#   debconf:
#     name: mysql-server
#     question: mysql-server/root_password_again
#     value: "root"
#     vtype: password
    # ************************************************************************************************************************

- name: Installing required packages.
  register: result
  until: result.failed == false
  delay: 10
  retries: 15
  become: yes
  apt:
    pkg: "{{packages}}"
    state: present
    update_cache: yes

- name: apt update.
  apt:
    update_cache: yes
  become: yes

- name: start nginx
  service:
    name: nginx
    state: started
  become: yes

- name: Install PM2.
  npm:
    name: pm2
    global: yes
  become: yes

- name: Install Forever.
  npm:
    name: forever
    global: yes
  become: yes

# - name: Install mongo support.
#   pip:
#     name: pymongo
#     executable: pip3
#   become: yes

# - name: Install mySQL support.
#   pip:
#     name: PyMySQL
#     executable: pip3
#   become: yes


