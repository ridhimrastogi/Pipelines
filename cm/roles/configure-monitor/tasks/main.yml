---
- name: Installing required packages.
  apt:
    pkg: "{{packages}}"
    state: present
  become: yes

- name: Create Monitor a directory if it does not exist
  file:
    path: Monitor
    state: directory
    mode: '0755'

# - name: Copy Monitor zip
#   become: yes
#   unarchive: src=Monitor.zip
#             dest=Monitor
#             mode=0777
- name: Copy Monitor zip
  become: yes
  copy: 
    src: Monitor.zip
    dest: /root/Monitor.zip
    mode: 0777

- name: Unzips folder
  command: unzip /root/Monitor.zip 

- name: Copy private key
  become: yes
  copy:
    src: /home/vagrant/.ssh/csc_519_rsa_private
    dest: /root/.ssh/csc_519_rsa_private
    mode: 0700

- name: Copy ServerInfo json
  become: yes
  copy:
    src: ../../serverInfos_DigitalOcean.json
    dest: Monitor/servers/serverInfos_DigitalOcean.json

- name: Copy Redis Config
  become: yes
  copy:
    src: redis.conf
    dest: /etc/redis/redis.conf

- name: Restart Redis server
  systemd:
    state: restarted
    daemon_reload: yes
    name: redis
    enabled: yes
  become: yes

- name: Install server packages
  npm:
    path: Monitor/servers

- name: Install agent packages
  npm:
    path: Monitor/agent

- name: Install dashboard packages
  npm:
    path: Monitor/dashboard

- name: Push agents to remote servers
  shell: nodejs /root/Monitor/servers/index.js push

- name: "Install forever (to run Node.js app)."
  npm: name=forever global=yes state=present
   
- name: "Check list of Node.js apps running."
  command: forever list
  register: forever_list
  # changed_when: false

- name: "Stop Monitor server if running"
  command: forever stop Monitor/dashboard/bin/www
  when: "forever_list.stdout.find('Monitor/dashboard/bin/www') >= 0"

- name: "Start Monitor server"
  command: forever start Monitor/dashboard/bin/www
  # when: "forever_list.stdout.find('Monitor/dashboard/bin/www') == -1"
