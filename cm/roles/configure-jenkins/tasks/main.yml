---
- name: Installing required packages.
  apt:
    pkg: "{{packages}}"
    state: present
  become: yes

- name: apt update.
  apt:
    update_cache: false
  become: yes

- name: add jenkins user to sudoers file.
  lineinfile:
    dest: /etc/sudoers
    state: present
    insertbefore: "# See sudoers"
    line: "jenkins ALL=(ALL) NOPASSWD: ALL"
  become: yes

- name: add jenkins key
  shell: wget -q -O - http://pkg.jenkins-ci.org/debian/jenkins-ci.org.key | sudo apt-key add -
  become: yes

- name: add jenkins repo.
  apt_repository:
    repo: deb https://pkg.jenkins.io/debian-stable binary/    
    update_cache: no
    state: present
  become: yes

- name: apt update.
  apt:
    update_cache: yes
  become: yes

- name: Installing Jenkins.
  apt:
    pkg: "jenkins"
    state: present
    update_cache: yes
  become: yes

- name: Create initialization scripts directory
  become: yes
  file: path=/var/lib/jenkins/init.groovy.d
        state=directory
        mode=0775

- name: Add initialization script to setup basic security
  become: yes
  template: src=basic-security.groovy
            dest=/var/lib/jenkins/init.groovy.d/basic-security.groovy

- name: Add GIT Hub NCSU credentials
  become: yes
  template: src=credentials.xml
            dest=/var/lib/jenkins/credentials.xml

- name: Create jenkins template directory
  become: yes
  file: path=/var/lib/jenkins_templates
        state=directory
        mode=0775

- name: Create jenkins scripts directory
  become: yes
  file: path=/var/lib/jenkins_scripts
        state=directory
        mode=0775
  
- name: Add jenkins template db.properties
  become: yes
  copy: src=db.properties.template
            dest=/var/lib/jenkins_templates/db.properties.template

- name: Add jenkins template email.properties
  become: yes
  copy: src=email.properties.template
            dest=/var/lib/jenkins_templates/email.properties.template
            

- name: Add iTrust bash script
  become: yes
  copy: src=copy_email_credentials.sh
            dest=/var/lib/jenkins_scripts/copy_email_credentials.sh
            mode=0777



- name: Set Jenkins server port to 9000.
  become: yes
  lineinfile:
    path: /etc/default/jenkins
    regexp: '^HTTP_PORT='
    line: HTTP_PORT=9000

- name: Turnoff Jenkins setup wizard.
  become: yes
  lineinfile:
    dest: /etc/default/jenkins
    regexp: '^JAVA_ARGS='
    line: 'JAVA_ARGS="-Djava.awt.headless=true -Djenkins.install.runSetupWizard=false"'
  notify:
    - restart jenkins
    - wait for jenkins

- name: Restart Jenkins if required
  service:
    name: jenkins
    state: restarted
  become: yes

- name: Install build-pipeline-plugin.
  jenkins_plugin:
    name: build-pipeline-plugin
    with_dependencies: yes
    state: latest
    url: "http://{{ jenkinssrv_IP  }}:9000"
    url_username: admin
    url_password: "{{ jenkins_default_pwd }}"
    timeout: 60
  register: install_res
  until: install_res is not failed
  retries: 10
  delay: 5
  notify:
    - restart jenkins
    - wait for jenkins

- name: Install workflow-aggregator plugin.
  jenkins_plugin:
    name: workflow-aggregator
    with_dependencies: yes
    state: latest
    url: "http://{{ jenkinssrv_IP  }}:9000"
    url_username: admin
    url_password: "{{ jenkins_default_pwd }}"
    timeout: 60
  register: install_res
  until: install_res is not failed
  retries: 10
  delay: 5
  notify:
    - restart jenkins
    - wait for jenkins

- name: Install pipeline-github plugin.
  jenkins_plugin:
    name: pipeline-github
    with_dependencies: yes
    state: latest
    url: "http://{{ jenkinssrv_IP  }}:9000"
    url_username: admin
    url_password: "{{ jenkins_default_pwd }}"
    timeout: 60
  register: install_res
  until: install_res is not failed
  retries: 10
  delay: 5
  notify:
    - restart jenkins
 

- name: Post Jenkins Credential to server
  shell: curl -X POST -H content-type:application/xml -d @credential.xml \
          http://{{ jenkinssrv_IP }}:9000/credentials/store/system/\
          domain/_/createCredentials
